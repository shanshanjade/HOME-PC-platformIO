#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#include <Ticker.h>


#define PIN D3

const uint8_t ApcFont35Bitmaps[] PROGMEM = {
    0x00,                               /* 0x20 space */
    0x80, 0x80, 0x80, 0x00, 0x80,       /* 0x21 exclam */
    0xA0, 0xA0,                         /* 0x22 quotedbl */
    0xA0, 0xE0, 0xA0, 0xE0, 0xA0,       /* 0x23 numbersign */
    0x60, 0xC0, 0x60, 0xC0, 0x40,       /* 0x24 dollar */
    0x80, 0x20, 0x40, 0x80, 0x20,       /* 0x25 percent */
    0xC0, 0xC0, 0xE0, 0xA0, 0x60,       /* 0x26 ampersand */
    0x80, 0x80,                         /* 0x27 quotesingle */
    0x40, 0x80, 0x80, 0x80, 0x40,       /* 0x28 parenleft */
    0x80, 0x40, 0x40, 0x40, 0x80,       /* 0x29 parenright */
    0xA0, 0x40, 0xA0,                   /* 0x2A asterisk */
    0x40, 0xE0, 0x40,                   /* 0x2B plus */
    0x40, 0x80,                         /* 0x2C comma */
    0xE0,                               /* 0x2D hyphen */
    0x80,                               /* 0x2E period */
    0x20, 0x20, 0x40, 0x80, 0x80,       /* 0x2F slash */
    0xE0, 0xA0, 0xA0, 0xA0, 0xE0,       /* 0x30 zero */
    0x40, 0x40, 0x40, 0x40, 0x40,       /* 0x31 one */
    0xE0, 0x20, 0xE0, 0x80, 0xE0,       /* 0x32 two */
    0xE0, 0x20, 0xE0, 0x20, 0xE0,       /* 0x33 three */
    0xA0, 0xA0, 0xE0, 0x20, 0x20,       /* 0x34 four */
    0xE0, 0x80, 0xE0, 0x20, 0xE0,       /* 0x35 five */
    0xE0, 0x80, 0xE0, 0xA0, 0xE0,       /* 0x36 six */
    0xE0, 0x20, 0x20, 0x20, 0x20,       /* 0x37 seven */
    0xE0, 0xA0, 0xE0, 0xA0, 0xE0,       /* 0x38 eight */
    0xE0, 0xA0, 0xE0, 0x20, 0xE0,       /* 0x39 nine */
    0x80, 0x00, 0x80,                   /* 0x3A colon */
    0x40, 0x00, 0x40, 0x80,             /* 0x3B semicolon */
    0x20, 0x40, 0x80, 0x40, 0x20,       /* 0x3C less */
    0xE0, 0x00, 0xE0,                   /* 0x3D equal */
    0x80, 0x40, 0x20, 0x40, 0x80,       /* 0x3E greater */
    0xE0, 0x20, 0x40, 0x00, 0x40,       /* 0x3F question */
    0x40, 0xA0, 0xE0, 0x80, 0x60,       /* 0x40 at */
    0x40, 0xA0, 0xE0, 0xA0, 0xA0,       /* 0x41 A */
    0xC0, 0xA0, 0xC0, 0xA0, 0xC0,       /* 0x42 B */
    0x60, 0x80, 0x80, 0x80, 0x60,       /* 0x43 C */
    0xC0, 0xA0, 0xA0, 0xA0, 0xC0,       /* 0x44 D */
    0xE0, 0x80, 0xE0, 0x80, 0xE0,       /* 0x45 E */
    0xE0, 0x80, 0xE0, 0x80, 0x80,       /* 0x46 F */
    0x60, 0x80, 0xE0, 0xA0, 0x60,       /* 0x47 G */
    0xA0, 0xA0, 0xE0, 0xA0, 0xA0,       /* 0x48 H */
    0xE0, 0x40, 0x40, 0x40, 0xE0,       /* 0x49 I */
    0x20, 0x20, 0x20, 0xA0, 0x40,       /* 0x4A J */
    0xA0, 0xA0, 0xC0, 0xA0, 0xA0,       /* 0x4B K */
    0x80, 0x80, 0x80, 0x80, 0xE0,       /* 0x4C L */
    0xA0, 0xE0, 0xE0, 0xA0, 0xA0,       /* 0x4D M */
    0xA0, 0xE0, 0xE0, 0xE0, 0xA0,       /* 0x4E N */
    0x40, 0xA0, 0xA0, 0xA0, 0x40,       /* 0x4F O */
    0xC0, 0xA0, 0xC0, 0x80, 0x80,       /* 0x50 P */
    0x40, 0xA0, 0xA0, 0xE0, 0x60,       /* 0x51 Q */
    0xC0, 0xA0, 0xE0, 0xC0, 0xA0,       /* 0x52 R */
    0x60, 0x80, 0x40, 0x20, 0xC0,       /* 0x53 S */
    0xE0, 0x40, 0x40, 0x40, 0x40,       /* 0x54 T */
    0xA0, 0xA0, 0xA0, 0xA0, 0x60,       /* 0x55 U */
    0xA0, 0xA0, 0xA0, 0x40, 0x40,       /* 0x56 V */
    0xA0, 0xA0, 0xE0, 0xE0, 0xA0,       /* 0x57 W */
    0xA0, 0xA0, 0x40, 0xA0, 0xA0,       /* 0x58 X */
    0xA0, 0xA0, 0x40, 0x40, 0x40,       /* 0x59 Y */
    0xE0, 0x20, 0x40, 0x80, 0xE0,       /* 0x5A Z */
    0xE0, 0x80, 0x80, 0x80, 0xE0,       /* 0x5B bracketleft */
    0x80, 0x40, 0x20,                   /* 0x5C backslash */
    0xE0, 0x20, 0x20, 0x20, 0xE0,       /* 0x5D bracketright */
    0x40, 0xA0,                         /* 0x5E asciicircum */
    0xE0,                               /* 0x5F underscore */
    0x80, 0x40,                         /* 0x60 grave */
    0xC0, 0x60, 0xA0, 0xE0,             /* 0x61 a */
    0x80, 0xC0, 0xA0, 0xA0, 0xC0,       /* 0x62 b */
    0x60, 0x80, 0x80, 0x60,             /* 0x63 c */
    0x20, 0x60, 0xA0, 0xA0, 0x60,       /* 0x64 d */
    0x60, 0xA0, 0xC0, 0x60,             /* 0x65 e */
    0x20, 0x40, 0xE0, 0x40, 0x40,       /* 0x66 f */
    0x60, 0xA0, 0xE0, 0x20, 0x40,       /* 0x67 g */
    0x80, 0xC0, 0xA0, 0xA0, 0xA0,       /* 0x68 h */
    0x80, 0x00, 0x80, 0x80, 0x80,       /* 0x69 i */
    0x20, 0x00, 0x20, 0x20, 0xA0, 0x40, /* 0x6A j */
    0x80, 0xA0, 0xC0, 0xC0, 0xA0,       /* 0x6B k */
    0xC0, 0x40, 0x40, 0x40, 0xE0,       /* 0x6C l */
    0xE0, 0xE0, 0xE0, 0xA0,             /* 0x6D m */
    0xC0, 0xA0, 0xA0, 0xA0,             /* 0x6E n */
    0x40, 0xA0, 0xA0, 0x40,             /* 0x6F o */
    0xC0, 0xA0, 0xA0, 0xC0, 0x80,       /* 0x70 p */
    0x60, 0xA0, 0xA0, 0x60, 0x20,       /* 0x71 q */
    0x60, 0x80, 0x80, 0x80,             /* 0x72 r */
    0x60, 0xC0, 0x60, 0xC0,             /* 0x73 s */
    0x40, 0xE0, 0x40, 0x40, 0x60,       /* 0x74 t */
    0xA0, 0xA0, 0xA0, 0x60,             /* 0x75 u */
    0xA0, 0xA0, 0xE0, 0x40,             /* 0x76 v */
    0xA0, 0xE0, 0xE0, 0xE0,             /* 0x77 w */
    0xA0, 0x40, 0x40, 0xA0,             /* 0x78 x */
    0xA0, 0xA0, 0x60, 0x20, 0x40,       /* 0x79 y */
    0xE0, 0x60, 0xC0, 0xE0,             /* 0x7A z */
    0x60, 0x40, 0x80, 0x40, 0x60,       /* 0x7B braceleft */
    0x80, 0x80, 0x00, 0x80, 0x80,       /* 0x7C bar */
    0xC0, 0x40, 0x20, 0x40, 0xC0,       /* 0x7D braceright */
    0x60, 0xC0,                         /* 0x7E asciitilde */
};
/* {offset, width, height, advance cursor, x offset, y offset} */
const GFXglyph ApcFont35Glyphs[] PROGMEM = {
    {0, 8, 1, 2, 0, -5},   /* 0x20 space */
    {1, 8, 5, 2, 0, -5},   /* 0x21 exclam */
    {6, 8, 2, 4, 0, -5},   /* 0x22 quotedbl */
    {8, 8, 5, 4, 0, -5},   /* 0x23 numbersign */
    {13, 8, 5, 4, 0, -5},  /* 0x24 dollar */
    {18, 8, 5, 4, 0, -5},  /* 0x25 percent */
    {23, 8, 5, 4, 0, -5},  /* 0x26 ampersand */
    {28, 8, 2, 2, 0, -5},  /* 0x27 quotesingle */
    {30, 8, 5, 3, 0, -5},  /* 0x28 parenleft */
    {35, 8, 5, 3, 0, -5},  /* 0x29 parenright */
    {40, 8, 3, 4, 0, -5},  /* 0x2A asterisk */
    {43, 8, 3, 4, 0, -4},  /* 0x2B plus */
    {46, 8, 2, 3, 0, -2},  /* 0x2C comma */
    {48, 8, 1, 4, 0, -3},  /* 0x2D hyphen */
    {49, 8, 1, 2, 0, -1},  /* 0x2E period */
    {50, 8, 5, 4, 0, -5},  /* 0x2F slash */
    {55, 8, 5, 4, 0, -5},  /* 0x30 zero */
    {60, 8, 5, 3, 0, -5},  /* 0x31 one */
    {65, 8, 5, 4, 0, -5},  /* 0x32 two */
    {70, 8, 5, 4, 0, -5},  /* 0x33 three */
    {75, 8, 5, 4, 0, -5},  /* 0x34 four */
    {80, 8, 5, 4, 0, -5},  /* 0x35 five */
    {85, 8, 5, 4, 0, -5},  /* 0x36 six */
    {90, 8, 5, 4, 0, -5},  /* 0x37 seven */
    {95, 8, 5, 4, 0, -5},  /* 0x38 eight */
    {100, 8, 5, 4, 0, -5}, /* 0x39 nine */
    {105, 8, 3, 2, 0, -4}, /* 0x3A colon */
    {108, 8, 4, 3, 0, -4}, /* 0x3B semicolon */
    {112, 8, 5, 4, 0, -5}, /* 0x3C less */
    {117, 8, 3, 4, 0, -4}, /* 0x3D equal */
    {120, 8, 5, 4, 0, -5}, /* 0x3E greater */
    {125, 8, 5, 4, 0, -5}, /* 0x3F question */
    {130, 8, 5, 4, 0, -5}, /* 0x40 at */
    {135, 8, 5, 4, 0, -5}, /* 0x41 A */
    {140, 8, 5, 4, 0, -5}, /* 0x42 B */
    {145, 8, 5, 4, 0, -5}, /* 0x43 C */
    {150, 8, 5, 4, 0, -5}, /* 0x44 D */
    {155, 8, 5, 4, 0, -5}, /* 0x45 E */
    {160, 8, 5, 4, 0, -5}, /* 0x46 F */
    {165, 8, 5, 4, 0, -5}, /* 0x47 G */
    {170, 8, 5, 4, 0, -5}, /* 0x48 H */
    {175, 8, 5, 4, 0, -5}, /* 0x49 I */
    {180, 8, 5, 4, 0, -5}, /* 0x4A J */
    {185, 8, 5, 4, 0, -5}, /* 0x4B K */
    {190, 8, 5, 4, 0, -5}, /* 0x4C L */
    {195, 8, 5, 4, 0, -5}, /* 0x4D M */
    {200, 8, 5, 4, 0, -5}, /* 0x4E N */
    {205, 8, 5, 4, 0, -5}, /* 0x4F O */
    {210, 8, 5, 4, 0, -5}, /* 0x50 P */
    {215, 8, 5, 4, 0, -5}, /* 0x51 Q */
    {220, 8, 5, 4, 0, -5}, /* 0x52 R */
    {225, 8, 5, 4, 0, -5}, /* 0x53 S */
    {230, 8, 5, 4, 0, -5}, /* 0x54 T */
    {235, 8, 5, 4, 0, -5}, /* 0x55 U */
    {240, 8, 5, 4, 0, -5}, /* 0x56 V */
    {245, 8, 5, 4, 0, -5}, /* 0x57 W */
    {250, 8, 5, 4, 0, -5}, /* 0x58 X */
    {255, 8, 5, 4, 0, -5}, /* 0x59 Y */
    {260, 8, 5, 4, 0, -5}, /* 0x5A Z */
    {265, 8, 5, 4, 0, -5}, /* 0x5B bracketleft */
    {270, 8, 3, 4, 0, -4}, /* 0x5C backslash */
    {273, 8, 5, 4, 0, -5}, /* 0x5D bracketright */
    {278, 8, 2, 4, 0, -5}, /* 0x5E asciicircum */
    {280, 8, 1, 4, 0, -1}, /* 0x5F underscore */
    {281, 8, 2, 3, 0, -5}, /* 0x60 grave */
    {283, 8, 4, 4, 0, -4}, /* 0x61 a */
    {287, 8, 5, 4, 0, -5}, /* 0x62 b */
    {292, 8, 4, 4, 0, -4}, /* 0x63 c */
    {296, 8, 5, 4, 0, -5}, /* 0x64 d */
    {301, 8, 4, 4, 0, -4}, /* 0x65 e */
    {305, 8, 5, 4, 0, -5}, /* 0x66 f */
    {310, 8, 5, 4, 0, -4}, /* 0x67 g */
    {315, 8, 5, 4, 0, -5}, /* 0x68 h */
    {320, 8, 5, 2, 0, -5}, /* 0x69 i */
    {325, 8, 6, 4, 0, -5}, /* 0x6A j */
    {331, 8, 5, 4, 0, -5}, /* 0x6B k */
    {336, 8, 5, 4, 0, -5}, /* 0x6C l */
    {341, 8, 4, 4, 0, -4}, /* 0x6D m */
    {345, 8, 4, 4, 0, -4}, /* 0x6E n */
    {349, 8, 4, 4, 0, -4}, /* 0x6F o */
    {353, 8, 5, 4, 0, -4}, /* 0x70 p */
    {358, 8, 5, 4, 0, -4}, /* 0x71 q */
    {363, 8, 4, 4, 0, -4}, /* 0x72 r */
    {367, 8, 4, 4, 0, -4}, /* 0x73 s */
    {371, 8, 5, 4, 0, -5}, /* 0x74 t */
    {376, 8, 4, 4, 0, -4}, /* 0x75 u */
    {380, 8, 4, 4, 0, -4}, /* 0x76 v */
    {384, 8, 4, 4, 0, -4}, /* 0x77 w */
    {388, 8, 4, 4, 0, -4}, /* 0x78 x */
    {392, 8, 5, 4, 0, -4}, /* 0x79 y */
    {397, 8, 4, 4, 0, -4}, /* 0x7A z */
    {401, 8, 5, 4, 0, -5}, /* 0x7B braceleft */
    {406, 8, 5, 2, 0, -5}, /* 0x7C bar */
    {411, 8, 5, 4, 0, -5}, /* 0x7D braceright */
    {416, 8, 2, 4, 0, -5}, /* 0x7E asciitilde */
};
const GFXfont ApcFont35 PROGMEM = {(uint8_t *)ApcFont35Bitmaps,(GFXglyph *)ApcFont35Glyphs, 0x20, 0x7E, 6};

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(32, 8, PIN,
  NEO_MATRIX_TOP     + NEO_MATRIX_LEFT +
  NEO_MATRIX_COLUMNS + NEO_MATRIX_ZIGZAG,
  NEO_GRB            + NEO_KHZ800);
const uint16_t colors[] = { matrix.Color(255, 0, 0), matrix.Color(0, 255, 0), matrix.Color(0, 0, 255) };

const uint8_t myGif[5000] PROGMEM= {
  0x08,
  0x08,
  0xff,
  0x04,
  B11100000,B10000000,B11100000,B10100000,B11100000,B00000000,B00000000,B00000000,//6
  B11100000,B00100000,B00100000,B00100000,B00100000,B00000000,B00000000,B00000000,//7
  B11100000,B10100000,B11100000,B10100000,B11100000,B00000000,B00000000,B00000000,//8
  B11100000,B10100000,B11100000,B00100000,B11100000,B00000000,B00000000,B00000000,//9
};

const uint8_t six[] PROGMEM= {
    B11100000,B10000000,B11100000,B10100000,B11100000,B00000000,B00000000,B00000000//
};

const unsigned char gImage_ant[2056] PROGMEM= { 0X00,0X10,0X20,0X00,0X20,0X00,0X01,0X1B,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X04,0X8F,0XE4,0X86,0X2B,0XA7,0X99,0XCE,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF5,0XE7,0XA6,0X8E,0XC5,0X8E,0XE4,0X86,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0B,0X5B,0X85,0X86,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XF5,0XEF,0XE6,0X8E,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X4C,0XAF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XA9,0X7D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC2,0X7E,0XFF,0XFF,
0XFF,0XFF,0X8C,0X96,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBC,0XE6,0X80,0X33,0X66,0X36,
0X46,0X36,0X07,0X8F,0XE9,0X4D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X48,0X46,0XC4,0X86,0XC5,0X86,0XC5,0X86,
0XC5,0X86,0XC5,0X86,0X09,0X96,0X26,0X3E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X88,0X4D,0XC5,0X86,0XFF,0XFF,0XFF,0XFF,0X66,0X6C,
0XE4,0X86,0XFF,0XFF,0XFF,0XFF,0XE1,0X21,0X07,0X46,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X26,0X3E,0X40,0X00,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0X00,0XFF,0XFF,0XFF,0XFF,0X20,0X00,0X44,0X46,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X46,0X36,0X00,0X00,0XFF,0XFF,0X00,0X00,0X80,0X00,
0XE8,0X41,0XFF,0XFF,0X00,0X00,0X00,0X00,0XA5,0X86,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X47,0X3E,0XC5,0X8E,0XC5,0X86,0XE7,0X6C,0XC5,0X8E,
0XA3,0X7E,0XA4,0X86,0XC5,0X86,0XC4,0X86,0X44,0X6D,0XB3,0X9C,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X07,0X2E,0XC4,0X8E,0XC5,0X86,0XC5,0X86,0XC5,0X86,0XC5,0X86,
0XC5,0X86,0XC5,0X86,0XE4,0X86,0X40,0X73,0XE2,0XFF,0XEB,0XFF,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X46,0X3E,0XE4,0X86,0XC5,0X86,0X42,0X3B,0XE4,0X86,0XC5,0X8E,
0XC5,0X86,0XC5,0X86,0X00,0X00,0XE3,0XFF,0XE4,0XFF,0XE2,0XFF,0X28,0X5E,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XCA,0X55,0XFF,0XFF,0XC5,0X86,0XC5,0X8E,0XA9,0X85,0X00,0X00,
0X00,0X30,0X00,0X00,0XE6,0XFF,0XE4,0XFF,0XE1,0XFF,0XE3,0XFF,0XD0,0X7B,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X68,0X46,0X2D,0XAF,0XC5,0X86,0XA7,0X86,0X01,0XF8,
0X00,0XF8,0X85,0X86,0XE5,0X8E,0X00,0X00,0XE2,0XFF,0XE4,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0XC5,0X8E,0XC5,0X86,0XA5,0X86,
0XE3,0X8E,0XC5,0X86,0XC5,0X86,0XA6,0X7E,0XE6,0X8E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X20,0X00,
0X8A,0X9E,0X20,0X00,0XFF,0XFF,0X8A,0X8E,0X47,0X95,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE6,0XFF,0X00,0X00,0X6C,0X6B,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XC5,0X86,0XC5,0X86,
0XC5,0X86,0XA4,0X86,0X85,0X6D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X22,0X84,0X45,0XDE,0XE0,0XFF,0XC5,0X86,0XE3,0X86,0X64,0X36,0XA5,0X86,0XC5,0X86,
0XA5,0X86,0XC5,0X86,0X65,0X3E,0X46,0X3E,0X47,0X36,0XF5,0XDF,0XF5,0XDF,0XA3,0X33,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE6,0XFF,
0XC7,0XFF,0XE4,0XFF,0XE8,0XFF,0X8C,0X6B,0XFF,0XFF,0X45,0X3E,0XC5,0X86,0XC5,0X86,
0XA5,0X86,0XC5,0X86,0X47,0X3E,0X05,0X7F,0XC5,0X86,0XC5,0X86,0XC5,0X86,0XC5,0X86,
0X47,0X3E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X9E,0XF7,0X9F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE6,0X39,0X68,0X76,0XC5,0X86,
0XC5,0X86,0XC5,0X7E,0X47,0X36,0XE4,0X86,0XC5,0X86,0XC5,0X86,0XC5,0X86,0XE5,0X7E,
0X66,0X66,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X28,0X4E,
0X46,0X3E,0X00,0X00,0XFF,0XFF,0XE4,0X4B,0XC5,0X86,0XC5,0X86,0XC6,0X86,0X01,0X0A,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC8,0X8D,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XC5,0X86,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XA4,0X8E,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XAE,0X73,0XC7,0X7E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XE1,0XFF,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE0,0XFF,0XE3,0XFF,0XE2,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XAB,0XFF,0XFF,0XFF,
0XE3,0XFF,0XE2,0XFF,0XE1,0XFF,0XE7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE7,0XFF,0XE3,0XFF,0X00,0X31,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE1,0XFF,0XE2,0XFF,0XE3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
};

const unsigned char gImage_cow[2056] PROGMEM= { 0X00,0X10,0X20,0X00,0X20,0X00,0X01,0X1B,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X00,0X78,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X40,0X68,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X20,0X68,0X9D,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XDF,0XF7,0X20,0X68,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0X40,0X60,0X00,0X68,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X00,0X60,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X20,0X60,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X21,0X60,0X00,0X70,0XBF,0XF7,0XBE,0XF7,
0XBE,0XF7,0X00,0X68,0X00,0X70,0XBD,0XFF,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X7E,0XFF,0X00,0X70,0X21,0X70,0XBE,0XF7,
0XBE,0XF7,0X00,0X70,0X00,0X70,0XBF,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X00,0X70,0XBE,0XF7,
0XBE,0XEF,0X00,0X68,0X00,0X70,0XBE,0XEF,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XEF,0X00,0X70,0X00,0X70,0X9E,0XF7,
0X9E,0XF7,0X00,0X70,0X00,0X70,0XFB,0XFE,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XDB,0XFE,0X00,0X70,0X00,0X70,0XBF,0XF7,
0X9E,0XF7,0X00,0X70,0X00,0X70,0X00,0X70,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X00,0X70,0X00,0X70,0X9E,0XFF,
0X7D,0XFF,0X00,0X70,0X00,0X70,0X00,0X70,0XDE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBD,0XFF,0X9F,0XF7,0XDE,0XF7,0XDE,0XFF,0XBD,0XFF,
0X9D,0XFF,0XBE,0XF7,0XBF,0XF7,0XBF,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X00,0X70,0X00,0X70,0X3D,0XFF,
0XBE,0XFF,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0X9E,0XFF,0X5B,0XFF,0X60,0XFA,0X60,0XFA,0X60,0XFA,0X40,0XFA,0X40,0XFA,
0X40,0XFA,0X40,0XFA,0X60,0XFA,0X60,0XFA,0XA0,0XF2,0X7A,0XFF,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBF,0XF7,0X40,0X60,0X00,0X70,0X00,0X70,0X00,0X70,0X9E,0XFF,
0XDE,0XEF,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X60,0XBE,0XF7,
0X41,0XF2,0X60,0XFA,0X60,0XFA,0X41,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X41,0XFA,0X60,0XFA,0X40,0XFA,0X60,0XF2,
0XDE,0XEF,0X21,0X60,0X00,0X68,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X7E,0XFF,
0XBE,0XF7,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,
0X40,0XFA,0X40,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X42,0XE2,
0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X9E,0XFF,
0XBE,0XF7,0XBE,0XF7,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,
0X00,0X70,0X40,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X01,0X68,
0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0XBE,0XE7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0X00,0X68,0X61,0XFA,0X60,0XFA,0X60,0XF2,0X01,0X70,0X00,0X70,
0X00,0X70,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X00,0X78,
0X00,0X70,0X00,0X70,0X41,0XB1,0X60,0XFA,0X60,0XFA,0X0B,0XEC,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0X60,0XFA,0XCD,0XF7,0X0D,0XFF,0X00,0XFA,0X60,0XFA,0X40,0XFA,
0X00,0X68,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X60,0XFA,
0X60,0XF2,0X60,0XFA,0X60,0XFA,0X42,0XFB,0XAD,0XFF,0X2E,0XFF,0X9E,0XFF,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XFF,0X40,0XFA,0XCD,0XFF,0XCD,0XFF,0XAD,0XFF,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X40,0XFA,0X60,0XFA,
0X60,0XFA,0X8B,0XFE,0XCD,0XFF,0XCD,0XFF,0XCD,0XFF,0X13,0XFE,0XBF,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBF,0XF7,0X81,0XEA,0XED,0XF7,0XED,0XF7,0XED,0XF7,
0X60,0XFA,0X80,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X60,0XFA,
0X80,0XF2,0XCD,0XFF,0XAD,0XFF,0X00,0XE3,0X97,0XFE,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBD,0XF7,0X40,0XFA,0X40,0XFA,
0X60,0XFA,0X60,0XFA,0X60,0XFA,0X21,0XFA,0XE0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XA0,0XF1,0X60,0XFA,0X60,0XFA,0X60,0XFA,
0X41,0XF2,0X40,0XFA,0X82,0XE2,0XBD,0XFF,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X9F,0XFF,
0X60,0XFA,0X60,0XFA,0X60,0XF2,0X40,0XFA,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0X60,0XFA,0X61,0XEA,0X60,0XFA,0X60,0XFA,
0X60,0XFA,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XDE,0XF7,
0X60,0XFA,0XE0,0XE8,0X60,0XFA,0X01,0X28,0X20,0X38,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,
0XC0,0XE8,0XE0,0XE8,0X60,0XFA,0X22,0XCA,0X21,0X20,0X60,0XFA,0XC0,0XE8,0X60,0XFA,
0X2B,0XF4,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0X60,0XFA,0XC0,0XE8,0XE0,0XE8,0X60,0XFA,0X40,0XFA,0X60,0XFA,0X60,0XFA,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0X60,0XFA,0X60,0XFA,0X60,0XFA,0XE0,0XE8,0XC0,0XE8,0X60,0XFA,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0X80,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XE0,0XE8,0X41,0XFA,0X60,0XFA,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0X41,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0X8F,0XFC,0X41,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X40,0XFA,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X41,0XFA,0X26,0XDB,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0X60,0XFA,0XE0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X40,0XE9,0X60,0XFA,
0X60,0XFA,0X60,0XF1,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0XC0,0XE8,0X60,0XFA,0XBE,0XFF,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0X9E,0XFF,0X60,0XFA,0XC0,0XE8,0XC0,0XE8,0X21,0XFA,0X60,0XFA,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0X21,0XFA,0XE0,0XE8,0XE0,0XE8,0X40,0XFA,0XBF,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XDF,0XEF,0X21,0XFA,0X62,0XEA,0X00,0X68,0X00,0X68,0X00,0X70,
0X00,0X70,0X00,0X68,0X00,0X70,0XC0,0X98,0X20,0XFA,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBF,0XF7,0X60,0XFA,0X20,0X68,0X00,0X70,0X00,0X70,0X00,0X70,
0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X60,0XF2,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X60,0XFA,0X00,0X68,0X00,0X70,0X00,0X70,0X00,0X70,
0X00,0X70,0X00,0X70,0X00,0X70,0X00,0X70,0X20,0XFA,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X60,0XFA,0X00,0X70,0X60,0XFA,0X00,0XB1,0X20,0X68,
0X00,0X70,0X00,0X78,0X60,0XFA,0X00,0X70,0X40,0XFA,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XFF,0X62,0XF2,0X00,0X78,0X60,0XFA,0X60,0XFA,
0X60,0XFA,0X60,0XFA,0X00,0X78,0X82,0XC9,0XBD,0XFF,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0X76,0XF6,0X80,0XF2,0X60,0XFA,0XE4,0XE2,
0X25,0XDB,0X40,0XFA,0X60,0XFA,0X15,0XFE,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,0XBE,0XF7,
};

const unsigned char gImage_doctor[2632] PROGMEM= { 0X00,0X10,0X20,0X00,0X29,0X00,0X01,0X1B,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3C,0XE7,0X71,0X8C,0X4A,0X4A,
0X08,0X3A,0X0D,0X63,0X8E,0X6B,0XC4,0X18,0X00,0X00,0XC3,0X18,0XD0,0X7B,0XBE,0XF7,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X78,0XC6,0X83,0X10,0X00,0X00,0X02,0X31,
0X84,0X49,0XC1,0X30,0X81,0X20,0X04,0X6A,0XC5,0X82,0XC4,0X59,0X00,0X08,0X49,0X42,
0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XBA,0XD6,0X30,0X7C,0X8B,0X52,0XCC,0X5A,0XC4,0X18,0X43,0X49,0X2C,0XD5,0XB0,0XFE,
0XAC,0XED,0XA9,0XDC,0XA8,0XD4,0X68,0XDC,0XA7,0XD4,0XA8,0XD4,0X28,0XC4,0X02,0X39,
0XC8,0X39,0X87,0X39,0X46,0X29,0X31,0X84,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X30,0X84,
0X41,0X08,0X42,0X41,0X45,0X6A,0X03,0X62,0X44,0X72,0XE9,0XD4,0X2E,0XF6,0X6F,0XF6,
0X2D,0XEE,0XAC,0XED,0XA8,0XD4,0X27,0XCC,0X27,0XCC,0X27,0XCC,0X67,0XD4,0XC7,0XBB,
0X84,0X82,0X05,0X9B,0X44,0X7A,0X00,0X10,0X8A,0X52,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB6,0XB5,0X00,0X08,
0XC9,0XAB,0XB0,0XFE,0X6F,0XFE,0X2A,0XE5,0XE9,0XE4,0X68,0XCC,0X68,0XD4,0X68,0XCC,
0X68,0XCC,0X68,0XCC,0X27,0XCC,0X27,0XCC,0X68,0XCC,0X27,0XCC,0X27,0XCC,0X27,0XD4,
0X68,0XD4,0X67,0XD4,0XA7,0XDC,0XC7,0XBB,0X40,0X18,0X34,0X9D,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XCF,0X73,0X02,0X39,
0XAD,0XED,0X6F,0XF6,0XEE,0XED,0XED,0XED,0XE9,0XD4,0X27,0XCC,0X27,0XCC,0X27,0XCC,
0X27,0XCC,0X27,0XC4,0XA9,0XD4,0XED,0XED,0XED,0XED,0X68,0XD4,0X68,0XCC,0X28,0XCC,
0X27,0XCC,0X27,0XCC,0X27,0XCC,0XA8,0XDC,0X44,0X72,0X8A,0X52,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0C,0X63,0X41,0X18,0X06,0X93,
0X68,0XD4,0X69,0XCC,0X28,0XCC,0XA9,0XD4,0X2B,0XDD,0XE9,0XD4,0X27,0XCC,0X27,0XCC,
0X27,0XCC,0X67,0XCC,0XAC,0XE5,0XB0,0XFE,0X2E,0XF6,0XED,0XED,0X2A,0XDD,0X68,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X68,0XD4,0X86,0XAB,0X04,0X29,0XF7,0XBD,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF3,0X9C,0X00,0X08,0X87,0XB3,0XA7,0XD4,
0X27,0XCC,0X27,0XC4,0XA9,0XD4,0X2F,0XF6,0XB1,0XFE,0XAC,0XE5,0X2B,0XDD,0XA9,0XD4,
0X27,0XCC,0X68,0XCC,0XA8,0XD4,0XE9,0XD4,0XA8,0XD4,0XA9,0XD4,0X27,0XCC,0X28,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X27,0XCC,0X67,0XD4,0X46,0XA3,0X82,0X20,0XF7,0XBD,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X8F,0X73,0XC1,0X30,0XA8,0XDC,0X67,0XCC,
0X67,0XCC,0X67,0XD4,0XE9,0XD4,0XAC,0XED,0XAC,0XED,0XAC,0XED,0X2A,0XDD,0XA8,0XD4,
0X27,0XC4,0X27,0XC4,0X67,0XCC,0X27,0XC4,0X27,0XCC,0X27,0XCC,0X27,0XCC,0X28,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X27,0XCC,0XA8,0XDC,0X44,0X7A,0XC8,0X41,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XBD,0X81,0X18,0X05,0X93,0X27,0XCC,
0X27,0XC4,0X85,0X72,0X44,0X41,0X04,0X62,0XC5,0X8A,0X05,0X9B,0X05,0X93,0X04,0X6A,
0XC2,0X28,0X03,0X31,0X28,0XC4,0X68,0XD4,0X27,0XCC,0X27,0XCC,0X27,0XCC,0X28,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X68,0XD4,0X87,0XB3,0X42,0X10,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB6,0XAD,0XC8,0X41,0X82,0X20,
0XC2,0X20,0XC7,0X41,0X8F,0X8B,0XCC,0X72,0XC8,0X49,0XC7,0X49,0X09,0X52,0X0D,0X83,
0X35,0XD5,0X49,0X5A,0XC2,0X30,0X87,0XAB,0X68,0XD4,0X68,0XD4,0X27,0XCC,0X27,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X68,0XD4,0X87,0XA3,0X41,0X08,
0XFE,0XF7,0X79,0XCE,0XBE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB6,0XB5,0X04,0X21,
0X0D,0X83,0X7A,0XFE,0XCF,0X9B,0X75,0XD5,0X7A,0XFE,0X39,0XFE,0X7A,0XFE,0XB7,0XE5,
0XD0,0XA3,0X8E,0X8B,0X86,0X39,0XC4,0X28,0X43,0X41,0XC4,0X59,0X87,0XB3,0X67,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X28,0XCC,0X67,0XD4,0XA8,0XDC,0X83,0X49,0X08,0X3A,
0X36,0X9D,0XF8,0XBD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7D,0XEF,0XB2,0X94,0X49,0X4A,
0XF4,0XC4,0X72,0XB4,0XB6,0XDD,0X8F,0X93,0X7A,0XFE,0X7A,0XFE,0X75,0XD5,0X4D,0X8B,
0X75,0XDD,0XB7,0XED,0X72,0XB4,0X8E,0X93,0X72,0XB4,0X05,0X31,0X86,0XAB,0X67,0XCC,
0X28,0XCC,0X28,0XCC,0X28,0XCC,0X67,0XD4,0XC7,0XBB,0X83,0X51,0X41,0X08,0X38,0XC6,
0X10,0X5B,0XB5,0X8C,0X3C,0XDF,0XFF,0XFF,0XFF,0XFF,0XFB,0XDE,0XB2,0X94,0XC8,0X41,
0X76,0XDD,0X8A,0X6A,0XF7,0XED,0X4E,0X8B,0X31,0XAC,0X34,0XCD,0X8F,0X93,0XB7,0XE5,
0XF4,0XC4,0X8B,0X72,0XBB,0XFE,0XCF,0X9B,0XB6,0XDD,0XC6,0X49,0X27,0XC4,0X67,0XCC,
0X27,0XCC,0X27,0XCC,0X67,0XD4,0X28,0XC4,0X82,0X20,0X49,0X42,0X79,0XCE,0XFF,0XFF,
0X36,0X9D,0X8F,0X52,0XD0,0X52,0XB4,0X8C,0XBE,0XF7,0X7D,0XEF,0X30,0X84,0XC7,0X39,
0XB5,0XDC,0X78,0XFD,0XB7,0XE5,0XCC,0X72,0XF4,0XCC,0X30,0XA4,0X8B,0X6A,0X7A,0XFE,
0XF3,0XC4,0X0C,0X7B,0XBA,0XFE,0XB2,0XB4,0X35,0XD5,0XCB,0X72,0X03,0X62,0X27,0XC4,
0X68,0XCC,0X68,0XCC,0X86,0XAB,0XC1,0X30,0X08,0X3A,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X7A,0XC6,0X92,0X73,0X8F,0X4A,0X36,0X9D,0XFF,0XFF,0XB6,0XB5,0XC3,0X18,
0X0F,0XB3,0X34,0XEC,0X0D,0X83,0X8E,0X93,0X7A,0XFE,0X7A,0XFE,0X8F,0X93,0XB7,0XE5,
0X39,0XFE,0X78,0XFD,0X78,0XFD,0X4E,0X93,0XB6,0XE5,0X38,0XF6,0XCB,0X72,0X44,0X39,
0X44,0X49,0XC2,0X28,0X83,0X18,0X0D,0X63,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFC,0XDE,0XD0,0X5A,0X74,0X84,0XFF,0XFF,0XFF,0XFF,0XB2,0X94,
0XC3,0X28,0XCE,0XA2,0XB4,0XD4,0XB6,0XDD,0XF8,0XF5,0X39,0XFE,0X75,0XD5,0X4D,0X8B,
0X34,0XDC,0XD5,0XEB,0XCE,0XA2,0XCE,0XA2,0XB8,0XFD,0X39,0XFE,0X7A,0XFE,0XB7,0XE5,
0X8A,0X62,0X45,0X29,0XBA,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3C,0XDF,0X51,0X6B,0XBB,0XCE,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
0XC7,0X39,0X4F,0X9B,0X7A,0XFE,0X39,0XFE,0X38,0XFE,0X38,0XFE,0X39,0XFE,0X35,0XD5,
0XCE,0X9A,0X8D,0X9A,0X10,0XBB,0X36,0XFC,0X77,0XFD,0X38,0XFE,0X7A,0XFE,0X75,0XD5,
0X04,0X29,0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFB,0XD6,0XB4,0X8C,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XBA,0XD6,0X45,0X29,0XCF,0XA3,0X7A,0XFE,0X39,0XFE,0X38,0XFE,0X38,0XFE,0X39,0XFE,
0XB8,0XFD,0XF7,0XFC,0XF7,0XFC,0X77,0XFD,0X39,0XFE,0X7A,0XFE,0X34,0XD5,0X04,0X29,
0X34,0XA5,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3C,0XE7,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XBA,0XD6,0XC7,0X39,0X49,0X62,0X35,0XDD,0X7A,0XFE,0X7A,0XFE,0X79,0XFE,
0X79,0XFE,0X79,0XFE,0X7A,0XFE,0X7A,0XFE,0XF7,0XED,0X8F,0X93,0X86,0X31,0X34,0XA5,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,0XF3,0X9C,0X08,0X4A,0X09,0X52,0X4D,0X8B,0X72,0XB4,
0X73,0XC4,0XB3,0XBC,0XCF,0X9B,0X49,0X62,0X04,0X29,0X82,0X10,0XF7,0XBD,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X79,0XCE,0XEF,0X94,0XAF,0X8C,0X79,0XC6,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3C,0XE7,0XB6,0XB5,0XCC,0X5A,0X82,0X10,0X0D,0X6B,0X84,0X21,
0X45,0X3B,0XC3,0X21,0X45,0X29,0X38,0XBE,0XB6,0XAD,0XCB,0X5A,0XCB,0X5A,0X30,0X84,
0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X49,0X4A,0X82,0X53,0X86,0X63,0X8B,0X62,0XB2,0X94,
0X4D,0X6B,0XCB,0X5A,0X8A,0X52,0X0C,0X63,0XCF,0X7B,0XC7,0X39,0XB7,0XBD,0XC9,0X5B,
0XEA,0X87,0X86,0X3A,0XB7,0XB5,0X79,0XCE,0X30,0X84,0XB2,0X94,0XFF,0XFF,0X8E,0X73,
0XCB,0X5A,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3B,0XDF,0XCB,0X6A,0X8A,0X62,0X86,0X39,0X0D,0X83,0X8E,0X73,
0XFA,0XD6,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0XF7,0XBD,0X04,0X21,0X34,0XA5,0X2B,0X64,
0XC6,0X43,0X35,0XAD,0XBD,0XEF,0X8A,0X52,0XF7,0XBD,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,
0XB2,0X94,0X4A,0X4A,0XBE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XCF,0X83,0X89,0X5A,0XC3,0X31,0XC7,0X39,0X4D,0X6B,
0XF3,0X9C,0X79,0XCE,0XBE,0XF7,0XFF,0XFF,0X30,0X84,0XCF,0X7B,0X30,0X84,0X89,0X4A,
0X8E,0X73,0X79,0XCE,0X71,0X8C,0X0C,0X63,0X3C,0XE7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X4E,0X6B,0X0D,0X6B,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X76,0XAD,0X83,0X5B,0XC4,0X63,0X77,0XB5,0X7D,0XEF,
0XB2,0X94,0X8A,0X52,0XC7,0X39,0X4D,0X6B,0X49,0X4A,0XBD,0XEF,0XB2,0X94,0XC3,0X18,
0X4D,0X6B,0XB2,0X94,0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X7D,0XEF,0X86,0X31,0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3A,0XCE,0X06,0X3A,0X65,0X9E,0X66,0XA6,0XC6,0X39,0X7A,0XCE,
0XFF,0XFF,0XFF,0XFF,0XFB,0XDE,0X8E,0X73,0X08,0X42,0XFF,0XFF,0XBA,0XD6,0XCB,0X5A,
0X79,0XCE,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBA,0XD6,0X7D,0XEF,
0XFF,0XFF,0XFF,0XFF,0X0C,0X63,0XB3,0X94,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X38,0XC6,0X05,0X3A,0X25,0X9E,0XE9,0XD7,0XE7,0XD7,0X23,0X9E,0X05,0X3A,
0X39,0XC6,0XFF,0XFF,0XFF,0XFF,0XF7,0XBD,0X4D,0X6B,0XFF,0XFF,0X38,0XC6,0X4D,0X6B,
0XCF,0X7B,0XB2,0X94,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XBD,0XB6,0XB5,
0XFF,0XFF,0XFF,0XFF,0X4D,0X6B,0XB2,0X94,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XBA,0XD6,0X84,0X29,0XE3,0XAE,0XEC,0XDF,0XF1,0XDF,0XE3,0XC7,0XE4,0XD7,0XA4,0XA6,
0X84,0X29,0X3C,0XE7,0XFF,0XFF,0XB2,0X94,0X71,0X8C,0XFF,0XFF,0X75,0XAD,0XB2,0X94,
0X38,0XC6,0XBA,0XD6,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XBD,0X75,0XAD,
0XFF,0XFF,0XFF,0XFF,0X49,0X4A,0X38,0XC6,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X79,0XCE,0XC2,0X18,0XA2,0X6C,0XA4,0X9E,0XE4,0XAE,0X23,0XAF,0XA3,0X9E,0X62,0X6C,
0X04,0X21,0X3C,0XE7,0XFF,0XFF,0X8E,0X73,0XB6,0XB5,0XFF,0XFF,0XF3,0X9C,0X75,0XAD,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X4D,0X6B,0X38,0XC6,
0XFF,0XFF,0XF3,0X9C,0X4A,0X4A,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XBA,0XCE,0X8F,0X73,0X0B,0X5B,0X0A,0X5B,0X0A,0X5B,0X0B,0X5B,0XCF,0X73,
0XBA,0XD6,0XFF,0XFF,0XFF,0XFF,0XCB,0X5A,0X79,0XCE,0XFF,0XFF,0X71,0X8C,0XF7,0XBD,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X38,0XC6,0X4D,0X7B,0XCB,0X72,0XCF,0X83,
0X75,0XAD,0X05,0X29,0XBA,0XD6,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X8A,0X52,0X3C,0XE7,0XFF,0XFF,0X71,0X8C,0XF3,0X9C,
0X30,0X84,0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0X33,0X9D,0X08,0X52,0XBB,0XFE,0X8B,0X6A,
0X42,0X08,0XF7,0XBD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XBD,0XEF,0X8A,0X52,0XBD,0XEF,0XFF,0XFF,0X30,0X84,0X75,0XAD,
0X71,0X8C,0XBA,0XD6,0XFF,0XFF,0X00,0X00,0XBE,0XF7,0XC7,0X41,0X0D,0X83,0XCF,0X83,
0X4D,0X6B,0XFB,0XDE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3C,0XE7,0XCC,0X62,0XFF,0XFF,0XFF,0XFF,0X8E,0X73,0X79,0XCE,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0XBA,0XD6,0X76,0XAD,0XFF,0XF7,
0XCF,0X7B,0X39,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X3C,0XE7,0X08,0X42,0XB9,0XD6,0XFF,0XFF,0XCF,0X7B,0X79,0XCE,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0XFF,0XFF,
0XCB,0X5A,0XF7,0XBD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XCF,0X7B,0X01,0X00,0X09,0X42,0X86,0X39,0XCF,0X7B,
0X34,0XA5,0X34,0XA5,0X34,0XA5,0X34,0XA5,0XB1,0X94,0X8D,0X73,0X00,0X00,0X05,0X21,
0X4D,0X6B,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB5,0XB5,0X07,0X00,0X4F,0X00,0X4B,0X00,0X02,0X08,
0X4A,0X52,0XCC,0X62,0X09,0X4A,0X00,0X00,0X08,0X00,0X4C,0X00,0X4E,0X00,0X00,0X00,
0X79,0XCE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB9,0XD6,0X89,0X08,0X15,0X01,0X4B,0X00,0XCC,0X62,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0C,0X6B,0X05,0X00,0XD1,0X00,0X15,0X01,0X00,0X00,
0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X38,0XC6,0X85,0X10,0X4B,0X00,0XC4,0X18,0X3B,0XDF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XCF,0X83,0X43,0X08,0X8A,0X00,0X06,0X00,
0X0C,0X63,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0C,0X63,0X00,0X00,0X00,0X00,0X4A,0X4A,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X30,0X8C,0X00,0X00,0X00,0X00,
0XC4,0X20,0X7D,0XEF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X30,0X84,0X4A,0X4A,0X8A,0X52,0XB6,0XB5,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X34,0XA5,0X00,0X00,0X00,0X00,
0X0C,0X63,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
};

const unsigned char gImage_wechat[2056] PROGMEM= { 0X00,0X10,0X20,0X00,0X20,0X00,0X01,0X1B,
0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0X51,0X8F,0X64,0X16,0XC3,0X0E,0XC3,0X16,0XA3,0X16,
0XC3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XC3,0X16,0XA3,0X16,0XC3,0X16,
0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0XA3,0X16,0XA3,0X16,0XA3,0X0E,0X63,0X16,0X32,0X97,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFE,0XFF,0XDF,0XFF,0X83,0X16,0XA4,0X16,0XA4,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA4,0X16,
0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0XA3,0X16,0XA3,0X16,0X83,0X16,0XA3,0X16,0XA4,0X16,0X83,0X16,0XFF,0XF7,0XFF,0XFF,
0XFF,0XFF,0X83,0X16,0X83,0X1E,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0XA3,0X16,0X83,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0X83,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,
0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X16,0XA3,0X06,0XFF,0XFF,
0X32,0XA7,0X83,0X16,0XA4,0X16,0XA3,0X16,0X83,0X16,0XA3,0X16,0XA3,0X16,0XA4,0X16,
0X83,0X16,0X83,0X16,0XA3,0X16,0X83,0X16,0X84,0X16,0X83,0X16,0X83,0X16,0XA3,0X16,
0XA3,0X16,0X83,0X16,0XA3,0X16,0X83,0X16,0XA3,0X16,0X83,0X16,0XA3,0X16,0X83,0X16,
0XA3,0X16,0X83,0X16,0X83,0X16,0XA3,0X16,0XA3,0X16,0X83,0X16,0XA3,0X0E,0X13,0X9F,
0X64,0X16,0X83,0X0E,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0XA3,0X16,0XC2,0X0E,
0X45,0X1E,0X23,0X06,0XFA,0XD7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XEF,0X43,0X16,
0XA3,0X0E,0X43,0X1E,0X84,0X16,0X84,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,
0X84,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X84,0X16,
0X83,0X0E,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0XF8,0XC7,
0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XDF,0XFF,0XFE,0XF7,0XA2,0X0E,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,
0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X0E,
0X62,0X16,0X83,0X16,0X63,0X0E,0X83,0X16,0X63,0X16,0X82,0X16,0XFF,0XF7,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X05,0X2E,0X83,0X0E,0X83,0X16,0X63,0X0E,0X83,0X16,
0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X83,0X16,0X82,0X1E,
0X63,0X16,0X63,0X0E,0X63,0X0E,0X63,0X16,0X43,0X16,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X11,0X87,0X63,0X0E,0X63,0X0E,0X63,0X0E,
0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X16,0X63,0X16,
0X63,0X16,0X63,0X0E,0X43,0X0E,0X82,0X06,0XDF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,
0XC5,0X2C,0XC5,0X2C,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XA0,0X05,0XFD,0XF7,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X23,0X16,0X43,0X16,0X43,0X0E,
0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X83,0X16,0X63,0X16,0X63,0X0E,0X63,0X16,
0X63,0X16,0X63,0X0E,0X63,0X0E,0XFC,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XF7,
0X63,0X0E,0X42,0X16,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X61,0X06,
0X63,0X0E,0XA2,0X0E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XFF,0X43,0X16,0X63,0X0E,
0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X63,0X0E,0X62,0X16,
0X63,0X16,0X43,0X0E,0X62,0X0E,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
0X22,0X06,0XC4,0X1D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0XE7,
0XA1,0X06,0XFA,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X23,0X16,0X43,0X0E,
0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X42,0X16,
0X22,0X16,0X62,0X0E,0X21,0X06,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X6F,0X8E,0X43,0X0E,
0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X42,0X0E,0X43,0X0E,0X43,0X0E,0X42,0X16,
0X42,0X16,0X42,0X0E,0XC3,0X1D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFC,0XEF,0XA2,0X14,0X41,0X0E,0X24,0X16,0XA1,0X06,0X03,0X1E,0X43,0X0E,
0X42,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X43,0X0E,0X22,0X16,
0X22,0X16,0X42,0X0E,0XA2,0X15,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFB,0XDF,
0X42,0X06,0XEF,0X86,0XFF,0XFF,0XDF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XDE,0XF7,
0X6E,0X76,0X03,0X0E,0X23,0X0E,0X23,0X0E,0X23,0X0E,0X23,0X0E,0X23,0X0E,0X22,0X16,
0X02,0X0E,0X23,0X0E,0XE3,0X15,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE4,0X1C,0XC8,0X4D,
0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X45,0X2D,0X02,0X16,0X23,0X0E,0X23,0X0E,0X23,0X0E,0X22,0X16,
0X02,0X0E,0X22,0X06,0X03,0X0E,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC3,0X14,0XDA,0XCF,0XFF,0XFF,
0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XB6,0XBF,0X03,0X0E,0X02,0X0E,0X02,0X0E,0X22,0X16,
0X02,0X0E,0X02,0X0E,0X02,0X0E,0X63,0X05,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0XEF,0X04,0X1E,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFE,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,
0X9F,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0X62,0X1D,0XE2,0X15,0X23,0X0E,0X02,0X0E,
0X02,0X0E,0X02,0X0E,0X02,0X0E,0XE2,0X0D,0XFC,0XEF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X16,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFE,0XFF,0XE2,0X0D,0XE2,0X0D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE2,0X15,
0X03,0X16,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0X02,0X0E,0X02,0X0E,0X22,0X16,
0X02,0X0E,0XE2,0X05,0XE2,0X0D,0XE2,0X05,0XE2,0X05,0XFD,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X05,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XDE,0XFF,0XE3,0X1D,0X24,0X1D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X02,0X16,
0X42,0X15,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,0X06,0XE2,0X0D,0X01,0X0E,
0X02,0X06,0XE2,0X0D,0XE2,0X0D,0XE2,0X0D,0X03,0X06,0X46,0X35,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XCB,0X4D,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0X87,0X35,0XE2,0X0D,0X01,0X0E,
0XE2,0X0D,0XE2,0X0D,0XE2,0X0D,0XE2,0X0D,0XE2,0X0D,0XFD,0XF7,0XDF,0XF7,0X43,0X15,
0XAA,0X4C,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0D,0X76,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEA,0X45,0XE2,0X0D,0XE2,0X0D,
0XC2,0X0D,0XC2,0X05,0XC2,0X05,0XE2,0X05,0X01,0X06,0X63,0X14,0XC2,0X0D,0XC2,0X05,
0XC2,0X05,0XC2,0X05,0XC2,0X05,0XE2,0X0D,0XC3,0X1C,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XA1,0X0D,0XC2,0X05,0XC2,0X0D,
0XC2,0X0D,0XA2,0X0D,0XC2,0X0D,0XA2,0X0D,0XC1,0X05,0XA2,0X0D,0XC2,0X0D,0XA2,0X0D,
0XA2,0X0D,0XC2,0X0D,0XA2,0X05,0XA2,0X0D,0XA2,0X0D,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XC2,0X0D,0XA2,0X0D,0XC2,0X0D,
0XC1,0X0D,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,
0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XC2,0X05,0XCE,0X7D,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X85,0X24,0XC2,0X05,0XA2,0X05,0XC2,0X0D,
0XA1,0X05,0XA1,0X05,0XA2,0X05,0XA2,0X0D,0XA2,0X05,0XA2,0X05,0XA2,0X05,0XA2,0X05,
0XA1,0X05,0XA2,0X05,0XA2,0X05,0XA2,0X05,0XA2,0X05,0XC1,0X05,0XFE,0XF7,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0XEF,0XA1,0X0D,0XA2,0X05,0XA2,0X05,0XA1,0X0D,
0XA1,0X05,0XA1,0X05,0XA2,0X05,0XA2,0X05,0XA1,0X05,0XA1,0X05,0XA2,0X05,0XA2,0X05,
0XA2,0X05,0XA1,0X05,0XA1,0X05,0XA2,0X05,0XA2,0X05,0XA2,0X05,0X82,0X0D,0XDC,0XE7,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE2,0X05,0XC1,0X05,0XA1,0X05,0XA2,0X05,0XC1,0X0D,
0XA1,0X05,0XA2,0X05,0XA2,0X05,0X82,0X05,0XA2,0X05,0XA2,0X05,0X82,0X05,0X82,0X05,
0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0XA2,0X05,0X82,0X05,0XA2,0X05,
0X83,0X05,0XFD,0XEF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFD,0XF7,0XB7,0XBF,0XFF,0XFF,0X97,0XBF,0X82,0X05,0XA2,0X05,0X82,0X05,0XA1,0X05,
0XA3,0X15,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X82,0X05,0X82,0X05,0XA2,0X05,
0X82,0X05,0X81,0X05,0X81,0X05,0XA2,0X05,0X81,0X05,0X82,0X05,0X81,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X81,0X05,0XE1,0X0D,0XE2,0X0C,0X21,0X05,0XE2,0X0D,0X82,0X05,
0X81,0X05,0X82,0X05,0X40,0X05,0XFD,0XF7,0XA2,0X05,0X81,0X05,0X81,0X05,0XE4,0X15,
0XFE,0XF7,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X82,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X82,0X05,0X81,0X05,0X81,0X05,0X82,0X05,0X82,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0XA1,0X05,0XFE,0XF7,
0XFF,0XFF,0X64,0X1D,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,
0X82,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X82,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X81,0X05,0X82,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,
0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X81,0X05,0X64,0X1D,0XFF,0XFF,
0XFF,0XFF,0XDF,0XFF,0X85,0X25,0XA1,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,
0X82,0X05,0X82,0X05,0X82,0X05,0X61,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,
0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0X82,0X05,0X61,0X05,0X82,0X05,0X82,0X05,
0X82,0X05,0X82,0X05,0X82,0X05,0X61,0X05,0X41,0X0D,0X65,0X2D,0XDE,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE9,0X4D,0X43,0X1D,0XA3,0X15,0XA3,0X15,
0XA3,0X15,0XA4,0X15,0XA3,0X15,0XA3,0X15,0XA3,0X15,0XA3,0X15,0XA3,0X15,0XA3,0X15,
0X84,0X15,0XA3,0X15,0XA3,0X15,0XA3,0X15,0X84,0X15,0X83,0X15,0XA3,0X15,0XA3,0X15,
0XA3,0X15,0X82,0X15,0X83,0X15,0X89,0X45,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
};

void drawWeek(uint8_t _week){
  matrix.drawLine(1,7,3,7,0x001F);
  matrix.drawLine(5,7,7,7,0x001F);
  matrix.drawLine(9,7,11,7,0x001F);
  matrix.drawLine(13,7,15,7,0x001F);
  matrix.drawLine(17,7,19,7,0x001F);
  matrix.drawLine(22,7,25,7,0X07E0);
  matrix.drawLine(27,7,30,7,0X07E0);
  switch( _week){
    case 0:
      matrix.drawLine(1,7,3,7,0xf800);
      break;
    case 1:
      matrix.drawLine(5,7,7,7,0xf800);
      break;
    case 2:
      matrix.drawLine(9,7,11,7,0xf800);
      break;
    case 3:
      matrix.drawLine(13,7,15,7,0xf800);
      break;
    case 4:
      matrix.drawLine(17,7,19,7,0xf800);
      break;
    case 5:
      matrix.drawLine(22,7,25,7,0xf800);
      break;
    case 6:
      matrix.drawLine(27,7,30,7,0xf800);
      break;
  }
}

void drawBitGIF(const uint8_t *_GIF){
  matrix.fill(0);
  uint8_t width = pgm_read_byte(&_GIF[0]);
  uint8_t height = pgm_read_byte(&_GIF[1]);
  uint8_t gifDelay = pgm_read_byte(&_GIF[2]);
  uint8_t picNum = pgm_read_byte(&_GIF[3]);
  uint8_t gifData[height*picNum];

  for(int i = 0; i < height*picNum ; i++){
    gifData[i] = pgm_read_byte(&_GIF[4+i]);
  }
  static uint8_t frameNum = 0;

  uint8_t frame[height];
  for (int i = 0; i < height; i++)
  {
    frame[i] = gifData[8*frameNum + i]; 
  }
  frameNum++;
  if(frameNum >= picNum) frameNum = 0;
  
  matrix.drawBitmap(0,0,frame,width,height,matrix.Color(0,255,0));
  Serial.println(frameNum);
  matrix.show();
  delay(gifDelay*5);
}

uint16_t buffer[15000];

uint16_t *rgbBitmap;

struct imageInfo
{
  int8_t width;
  int8_t height;
  uint8_t frameNum;
  uint16_t delayms;
} rgbBMPInfo;

Ticker myticker;

uint8_t week = 0;
int y= 0;
int8_t flag = -1;

uint16_t *u8to16_PGM(const unsigned char u8arr[]){
  rgbBMPInfo.width = pgm_read_word(&u8arr[2]);
  rgbBMPInfo.height = pgm_read_word(&u8arr[4]);
  uint16_t *arr16 = (uint16_t *)memcpy_P(buffer,&u8arr[8],rgbBMPInfo.width*rgbBMPInfo.height*2);
  return arr16;
}
void changeBMP(){
    static uint8_t BMPindex = 0;
    switch(BMPindex%4){
    case 0 : 
      rgbBitmap = u8to16_PGM(gImage_wechat);
      break;
    case 1 :
      rgbBitmap = u8to16_PGM(gImage_doctor);
      break;
    case 2 :
      rgbBitmap = u8to16_PGM(gImage_cow);
      break;
    case 3 :
      rgbBitmap = u8to16_PGM(gImage_ant);
      break;
  }
  BMPindex++;
  y = 0;
  flag = -1;
}

void setup() {
  Serial.begin(115200);
  matrix.begin();

  myticker.attach(30,changeBMP);
  matrix.setBrightness(10);
  matrix.setTextWrap(false);
  matrix.setTextColor(colors[0]);
  matrix.setFont(&ApcFont35);
  matrix.setCursor(0,8);
  matrix.print("   ARTRIX");
  matrix.show();
  delay(2000);
  matrix.drawBitmap(0,0,six,7,8,matrix.Color(0,255,0));
  matrix.show();
  delay(2000);
  rgbBitmap = u8to16_PGM(gImage_doctor);
}



void loop() {
  matrix.clear();
  
  matrix.drawRGBBitmap(0,y,rgbBitmap,rgbBMPInfo.width,rgbBMPInfo.height);
  // matrix.setCursor(2,6);
  // matrix.print("22:44:58");
  // drawWeek(week);
  matrix.show();
  y=y+flag ;if(y < -rgbBMPInfo.height+9 || y > -1)flag = -flag ;
  Serial.println(y);
  delay(50);
  // drawBitGIF(myGif);
  // yield();
}
